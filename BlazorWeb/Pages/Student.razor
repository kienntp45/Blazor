@page "/student"
@inject HttpClient Http
@inject NavigationManager _navigationManager
<h3>Student</h3>

@if (student != null)
{
    <div class="modal fade" id="update" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" >
    <div class="modal-dialog" style="width: 51%;max-width: 80%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <EditForm Model="@student" OnSubmit="Update"  class="form-horizontal" >
                         <div class="form-group">
                            <div class="col-sm-10">
                                <img src="@student.Image" class="rounded-circle" style="width: 150px;"alt="Avatar" />
                            </div>
                        </div>
                            <div class="form-group mb-3">
                                <label for="formFile" class="form-label">Default file input example</label>
                                <input class="form-control" type="file" id="formFile" >
                            </div>
                        <div class="form-group">
                            <label for="name" class="col-sm-2 control-label">Tên</label>    
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="name" placeholder="Name" @bind="student.Name">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="DOB" class="col-sm-2 control-label">Ngày sinh</label>
                            <div class="col-sm-10">
                                <input type="date" class="form-control" id="DOB" placeholder="Ngày sinh" @bind="student.DOB">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="Gender" class="col-sm-2 control-label">Giới tính</label>
                               <div class="col-sm-10">
                                <InputRadioGroup @bind-Value="@student.Gender" style="padding-right: 10px">
                                    <InputRadio Value="1" />Nam
                                    <InputRadio Value="0" /> Nữ
                                </InputRadioGroup>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="status" class="col-sm-2 control-label">Trang thái</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="status" value="@(student.Status.ToString() == "True" ? "Hoạt động": "Nghỉ học")" disabled>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" @onclick="(()=>SearchStudent())" >Lưu</button>
                        </div>
                    </EditForm>

                </div>
            </div>
            
        </div>
    </div>
</div>
}

@if (StudentID != null)
{
    <div class="modal fade" id="delete" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 51%;max-width: 80%;">
        <div class="modal-content">
         <EditForm Model="StudentID" OnSubmit="Delete">
                <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Xác nhận</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <p>Bạn có chắc chắn muốn xóa tài khoản @StudentID.Name</p>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal">Xóa</button>
            </div>
         </EditForm>
        </div>
    </div>
</div>
}

@if (students == null)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    int stt = 0;
    <div class="row">
        <div class="col-md-5 mx-auto">
            <div class="input-group">
                <input class="form-control border-end-0 border rounded-pill" type="search" id="example-search-input" @bind="Search">
                <span class="input-group-append">
                    <button class="btn btn-outline-secondary bg-white border-bottom-0 border rounded-pill ms-n5" @onclick="(()=>SearchStudent())" type="button">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>STT</th>
                <th>Img</th>
                <th>Tên</th>
                <th>Ngày sinh</th>
                <th>Giới tính</th>
                <th>Trạng thái</th>
                <th>Tùy chọn</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stu in students)
            {
                <tr>
                    <td>@(stt++)</td>
                    <td><img src="@stu.Student.Image" alt="#Value" style="width: 15%; height: 25%" /></td>
                    <td>@stu.Student.Name</td>
                    <td>@stu.Student.DOB</td>
                    <td>
                        @{
                            if (stu.Student.Gender == 1)
                            {
                                        <p>Nam</p>
                            }
                            else
                            {
                                        <p>Nữ</p>
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (stu.Student.Status)
                            {
                                        <p>Hoạt động</p>
                            }
                            else
                            {
                                        <p>Nghỉ học</p>
                            }
                        }
                    </td>
                    <td>
                        <div>
                            <button type="button" class="btn btn-success" style="margin-right: 5px" @onclick="(()=>showStudent(stu.Student.ID))" data-bs-toggle="modal" data-bs-target="#update">Sửa</button>
                            @{
                                if (stu.Student.Status)
                                {
                                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" @onclick="(()=>GetStuentID(stu.Student))" data-bs-target="#delete">Xóa</button>
                                }
                                else
                                {
                                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" @onclick="(()=>GetStuentID(stu.Student))" data-bs-target="#delete" disabled> Xóa </button>
                                }
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>    
    </table>
    <div aria-label="Page navigation example" class="col-8 offset-4">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link"  aria-label="Previous"  @onclick="(()=>GetPage(Page-1))">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @{
                if (Page > 1)
                {
                        <li class="page-item"><a class="page-link" @onclick="(()=>GetPage(Page-1))">@(Page-1)</a></li>
                        <li class="page-item"><a class="page-link text-danger" @onclick="(()=>GetPage(Page))">@Page</a></li>
                        <li class="page-item"><a class="page-link" @onclick="(()=>GetPage(Page+1))">@(Page+1)</a></li>
                }
                else
                {
                    Page = 1;
                        <li class="page-item"><a class="page-link text-danger" @onclick="(()=>GetPage(Page))">@Page</a></li>
                        <li class="page-item"><a class="page-link" @onclick="(()=>GetPage(Page+1))">@(Page+1)</a></li>
                }
            }
            <li class="page-item">
                <a class="page-link" aria-label="Next" @onclick="(()=>GetPage(Page+1))">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </div>
}
@code {
    #nullable disable
    [Parameter]
    public List<ViewStudentMark> students { get; set; }

    public BlazorModel.Data.Entities.Students student = new BlazorModel.Data.Entities.Students();

    public BlazorModel.Data.Entities.Students StudentID = new BlazorModel.Data.Entities.Students();

    [Parameter]
    public int Page { get; set; } = 1;
    [Parameter]
    public string Search { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //student  = await Http.GetFromJsonAsync<Student>("/api/Stu/find-student-by-id/{}");
        students = await Http.GetFromJsonAsync<List<ViewStudentMark>>($"/api/Stu/get-all?page1={Page}&name={Search}");
    }

    async void showStudent(int? id)
    {
        student = await Http.GetFromJsonAsync<BlazorModel.Data.Entities.Students>("/api/Stu/find-student-by-id/?id=" + id);
    }

    async Task Delete()
    {
        await Http.DeleteAsync("/api/Stu/delete-student/?id=" + StudentID.ID);
        await OnInitializedAsync();
    }

    async Task GetPage(int page)
    {
        Page = page;
        await OnInitializedAsync();
    }

    async Task SearchStudent()
    {
       await OnInitializedAsync();
    }

    async void GetStuentID(BlazorModel.Data.Entities.Students student)
    {
        StudentID = student;
    }

    async Task Update()
    {
        await Http.PutAsJsonAsync<BlazorModel.Data.Entities.Students>("/api/Stu/sua-student", student);
        await OnInitializedAsync();
    }   

     void NevigateToYourUrl()
    {
        _navigationManager.NavigateTo("/");
    }
}