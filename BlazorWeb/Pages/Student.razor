@page "/student"
@inject HttpClient Http
@inject NavigationManager _navigationManager
<h3>Student</h3>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 51%;max-width: 80%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <EditForm Model="@student" OnSubmit="Update"  class="form-horizontal" >
                        <div class="form-group">
                            <label for="name" class="col-sm-2 control-label">Tên</label>    
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="name" placeholder="Name" @bind="student.Name">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="DOB" class="col-sm-2 control-label">Ngày sinh</label>
                            <div class="col-sm-10">
                                <input type="date" class="form-control" id="DOB" placeholder="Ngày sinh" @bind="student.DOB">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="Gender" class="col-sm-2 control-label">Giới tính</label>
                               <div class="col-sm-10">
                                <InputRadioGroup @bind-Value="@student.Gender" style="padding-right: 10px">
                                    <InputRadio Value="1" />Nam
                                    <InputRadio Value="0" /> Nữ
                                </InputRadioGroup>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="status" class="col-sm-2 control-label">Trang thái</label>
                            <div class="col-sm-10">
                                <input type="text" class="form-control" id="status" value="@(student.Status.ToString() == "True" ? "ok": "thoi")" disabled>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" onclick="javascript:window.location.reload()" >Lưu</button>
                        </div>
                    </EditForm>

                </div>
            </div>
            
        </div>
    </div>
</div>

<div class="modal fade" id="delete" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 51%;max-width: 80%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Xác nhận</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <p>Bạn có chắc chắn muốn xóa</p>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" onclick="javascript:window.location.reload()">Xóa</button>
            </div>
        </div>
    </div>
</div>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>DOB</th>
                <th>Gender</th>
                <th>Status</th>
                <th>Tùy chọn</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stu in students)
            {
                <tr>
                    <td>@stu.Student.Name</td>
                    <td>@stu.Student.DOB</td>
                    <td>
                        @{
                            if (stu.Student.Gender == 1)
                            {
                                <p>Nam</p>
                            }
                            else
                            {
                                <p>Nữ</p>
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (stu.Student.Status)
                            {
                                <p>Hoạt động</p>
                            }
                            else
                            {
                                <p>Không hoạt động</p>
                            }
                        }
                    </td>
                    <td>
                        <button type="button" class="btn btn-success" @onclick="(()=>showStudent(stu.Student.ID))" data-bs-toggle="modal" data-bs-target="#exampleModal">
                            Sửa
                        </button>

                         <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#delete">
                            Xóa
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
@code {
    #nullable disable
    [Parameter]
    public List<ViewStudentMark> students { get; set; }

    public BlazorModel.Data.Entities.Students student = new BlazorModel.Data.Entities.Students();

    protected override async Task OnInitializedAsync()
    {
        //student  = await Http.GetFromJsonAsync<Student>("/api/Stu/find-student-by-id/{}");
        students = await Http.GetFromJsonAsync<List<ViewStudentMark>>("/api/Stu/get-all");
    }

    async void showStudent(int? id)
    {
        student = await Http.GetFromJsonAsync<BlazorModel.Data.Entities.Students>("/api/Stu/find-student-by-id/?id=" + id);
    }

     async void Delete(int? id)
    {
        await Http.DeleteAsync("/api/Stu/delete-student/?id=" + id);
    }

    async Task Update()
    {
        await Http.PutAsJsonAsync<BlazorModel.Data.Entities.Students>("/api/Stu/sua-student", student);
    }   

     void NevigateToYourUrl()
    {
        _navigationManager.NavigateTo("/");
    }
}